---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import Layout from "../layouts/Layout.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<Layout title={title} description={description}>
  <article>
    <div class="hero-image">
      {heroImage && <Image width={1200} height={600} src={heroImage} alt="" />}
    </div>
    <div class="prose">
      <div class="title">
        <div class="date">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1>{title}</h1>
        <hr />
      </div>
      <slot />
    </div>
  </article>
</Layout>

<style>
  /* Prevent horizontal overflow */
  article {
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
    box-sizing: border-box;
  }

  .hero-image {
    width: 100%;
    max-width: 100%;
    margin-bottom: 2rem;
    overflow: hidden;
    border-radius: 12px;
  }

  .hero-image img {
    width: 100%;
    height: auto;
    max-width: 100%;
    display: block;
    object-fit: cover;
    border-radius: 12px;
  }

  .prose {
    width: 100%;
    max-width: 65ch; /* Optimal reading width */
    margin: 0 auto;
    padding: 0 1rem;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
    hyphens: auto;
  }

  .title {
    margin-bottom: 2rem;
    padding: 1rem 0;
    text-align: center;
    border-bottom: 1px solid var(--primary-color, #ccc);
  }

  .title h1 {
    margin: 1rem 0 0 0;
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    line-height: 1.2;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  .date {
    margin-bottom: 1rem;
    color: var(--primary-color, #666);
    font-size: 0.9rem;
  }

  .last-updated-on {
    font-style: italic;
    margin-top: 0.5rem;
    font-size: 0.85rem;
  }

  hr {
    border: none;
    height: 1px;
    background: var(--primary-color, #ccc);
    margin: 1rem 0;
  }

  /* Ensure all content in prose doesn't overflow */
  .prose :global(*) {
    max-width: 100%;
    box-sizing: border-box;
  }

  /* Handle images within content */
  .prose :global(img) {
    width: 100%;
    height: auto;
    max-width: 100%;
    border-radius: 8px;
    margin: 1rem 0;
    display: block;
  }

  /* Handle code blocks */
  .prose :global(pre) {
    overflow-x: auto;
    max-width: 100%;
    padding: 1rem;
    border-radius: 8px;
    background: var(--surface-color, #f5f5f5);
    font-size: 0.9rem;
  }

  .prose :global(code) {
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  /* Handle tables */
  .prose :global(table) {
    width: 100%;
    max-width: 100%;
    overflow-x: auto;
    display: block;
    white-space: nowrap;
  }

  /* Handle blockquotes */
  .prose :global(blockquote) {
    margin: 1.5rem 0;
    padding: 1rem 1.5rem;
    border-left: 4px solid var(--primary-color, #ccc);
    background: var(--surface-color, #f9f9f9);
    border-radius: 0 8px 8px 0;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .prose {
      padding: 0 0.75rem;
      max-width: 100%;
    }

    .title {
      padding: 0.75rem 0;
    }

    .title h1 {
      font-size: clamp(1.25rem, 5vw, 2rem);
    }

    .hero-image {
      margin-bottom: 1.5rem;
      border-radius: 8px;
    }

    .hero-image img {
      border-radius: 8px;
    }
  }

  @media (max-width: 480px) {
    .prose {
      padding: 0 0.5rem;
    }

    .prose :global(pre) {
      padding: 0.75rem;
      font-size: 0.8rem;
    }
  }
</style>
