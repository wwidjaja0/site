---
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<Layout
  title="garden • will widjaja"
  description="My digital garden contains my notes, thoughts, and original articles."
  footerMsg=`remember to comment, like, and subscribe!`
>
  <main-header>
    <h2>/garden</h2>
    <blockquote>
      <p>"Welcome to the jungle"</p>
      <footer>— xQc, <cite>after getting his first sub</cite></footer>
    </blockquote>
  </main-header>
  <section class="blog-grid">
    <ul class="posts-list">
      {
        posts.map((post) => (
          <li class="post-card">
            <a href={`/garden/${post.id}/`} class="post-link">
              {post.data.heroImage && (
                <div class="post-image">
                  <Image
                    width={300}
                    height={200}
                    src={post.data.heroImage}
                    alt={post.data.title}
                  />
                </div>
              )}
              <div class="post-content">
                <h3 class="post-title">{post.data.title}</h3>
                <p class="post-date">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                {post.data.description && (
                  <p class="post-description">{post.data.description}</p>
                )}
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>

<style>
  .blog-grid {
    padding: 2rem 0;
  }

  .posts-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .post-card {
    background: var(--surface-color, #ffffff);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: var(--surface-shadow, 0 4px 12px rgba(0, 0, 0, 0.1));
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .post-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--surface-shadow, 0 8px 24px rgba(0, 0, 0, 0.15));
  }

  .post-link {
    text-decoration: none;
    color: inherit;
    display: block;
    height: 100%;
  }

  .post-image {
    width: 100%;
    max-height: 200px;
    overflow: hidden;
    background: var(--accent-color, #f0f0f0);
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    color: var(--text-color, #333);
    line-height: 1.3;
  }

  .post-date {
    font-size: 0.875rem;
    color: var(--primary-color, #666);
    margin: 0 0 1rem 0;
    font-weight: 500;
  }

  .post-description {
    font-size: 0.95rem;
    color: var(--text-color, #555);
    line-height: 1.5;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @media (max-width: 768px) {
    .posts-list {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 0 1rem;
    }

    .post-content {
      padding: 1.25rem;
    }

    .post-title {
      font-size: 1.125rem;
    }
  }
</style>
